# QuantumShield Integrity Check ‚Äì v3.0
Write-Host "üîç Starte Systempr√ºfung..." -ForegroundColor Cyan
$errors = 0

# 1. Firewall Check
$firewallProfiles = Get-NetFirewallProfile
if ($firewallProfiles | Where-Object {$_.Enabled -eq $false}) {
    Write-Host "‚ùå Firewall ist nicht f√ºr alle Profile aktiviert!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Firewall ist aktiv f√ºr alle Profile." -ForegroundColor Green
}

# 2. Remote Desktop Check
$rdp = Get-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections
if ($rdp.fDenyTSConnections -ne 1) {
    Write-Host "‚ùå Remote Desktop ist NICHT deaktiviert!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Remote Desktop ist deaktiviert." -ForegroundColor Green
}

# 3. SMBv1 Check
$smb = Get-SmbServerConfiguration
if ($smb.EnableSMB1Protocol) {
    Write-Host "‚ùå SMBv1 ist noch aktiviert!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ SMBv1 ist deaktiviert." -ForegroundColor Green
}

# 4. Defender Check
$def = Get-MpPreference
if ($def.DisableRealtimeMonitoring -ne $false -or $def.MAPSReporting -ne "Advanced" -or $def.SubmitSamplesConsent -ne "SendAllSamples") {
    Write-Host "‚ùå Defender-Einstellungen sind nicht vollst√§ndig korrekt!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Defender-Echtzeitschutz & Cloud-Schutz aktiv." -ForegroundColor Green
}

# 5. Firewall Rules Check
$telnet = Get-NetFirewallRule -DisplayName "Block Telnet" -ErrorAction SilentlyContinue
$ftp = Get-NetFirewallRule -DisplayName "Block FTP" -ErrorAction SilentlyContinue
if (!$telnet -or !$ftp -or $telnet.Enabled -ne "True" -or $ftp.Enabled -ne "True") {
    Write-Host "‚ùå Firewall-Regeln f√ºr Telnet und FTP fehlen oder sind deaktiviert!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Firewall blockiert Telnet & FTP." -ForegroundColor Green
}

# 6. Hosts-Eintr√§ge Check
$hosts = Get-Content "C:\Windows\System32\drivers\etc\hosts"
if (($hosts -notmatch "tracking.badsite.com") -or ($hosts -notmatch "ads.maliciousdomain.net")) {
    Write-Host "‚ùå Hosts-Datei enth√§lt NICHT alle Schutz-Eintr√§ge!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Hosts-Eintr√§ge sind vorhanden." -ForegroundColor Green
}

# 7. Backup-Dateien Check
$docPath = "$env:USERPROFILE\OneDrive\Dokumente"
$hostBackup = Get-ChildItem "$docPath\hosts_backup_*" -ErrorAction SilentlyContinue
$regBackup = Get-ChildItem "$docPath\registry_backup_*.reg" -ErrorAction SilentlyContinue
if (!$hostBackup -or !$regBackup) {
    Write-Host "‚ùå Mindestens ein Backup (hosts/registry) fehlt!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Backups vorhanden (hosts & registry)." -ForegroundColor Green
}

# 8. Log-Datei vorhanden
$logPath = "$docPath\QuantumShield_log.txt"
if (-not (Test-Path $logPath)) {
    Write-Host "‚ùå QuantumShield-Logdatei fehlt!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ Logdatei existiert: QuantumShield_log.txt" -ForegroundColor Green
}

# 9. ShadowReplace-Log
$shadowLog = "$env:TEMP\shadowreplace_log.txt"
if (-not (Test-Path $shadowLog)) {
    Write-Host "‚ùå ShadowReplace-Log fehlt!" -ForegroundColor Red
    $errors++
} else {
    Write-Host "‚úÖ ShadowReplace-Log vorhanden." -ForegroundColor Green
}

# Ergebnis
Write-Host "`n--------------------------------------------"
if ($errors -eq 0) {
    Write-Host "‚úÖ‚úÖ‚úÖ ALLES SICHER! QuantumShield ist vollst√§ndig und korrekt aktiv." -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è $errors Problem(e) erkannt ‚Äì bitte pr√ºfen & korrigieren!" -ForegroundColor Yellow
}
Write-Host "--------------------------------------------`n"
