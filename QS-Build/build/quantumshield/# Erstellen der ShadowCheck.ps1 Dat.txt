# Erstellen der ShadowCheck.ps1 Datei-Inhalte
shadowcheck_script = r'''
# ShadowCheck.ps1 ‚Äì Sicherheitspr√ºfung

Write-Host "`nüõ°Ô∏è Starte ShadowCheck ‚Äì Sicherheitspr√ºfung l√§uft..." -ForegroundColor Cyan

# 1. Hosts-Datei pr√ºfen
Write-Host "`nüìÑ √úberpr√ºfe Hosts-Datei..." -ForegroundColor Gray
$hostsPath = "C:\Windows\System32\drivers\etc\hosts"
if (Test-Path $hostsPath) {
    Get-Content $hostsPath | Where-Object { $_ -notmatch "^#|^\s*$" }
} else {
    Write-Host "‚ùå Hosts-Datei nicht gefunden." -ForegroundColor Red
}

# 2. Defender-Status
Write-Host "`nüõ°Ô∏è Windows Defender Status..." -ForegroundColor Gray
Get-MpComputerStatus | Select-Object AMServiceEnabled, AntispywareEnabled, AntivirusEnabled, RealTimeProtectionEnabled

# 3. Netzwerkverbindungen & Remote-IPs
Write-Host "`nüåê Aktive Netzwerkverbindungen (Remote-IP)..." -ForegroundColor Gray
Get-NetTCPConnection | Where-Object { $_.RemoteAddress -ne '127.0.0.1' -and $_.RemoteAddress -ne '::1' } | Select-Object LocalAddress, LocalPort, RemoteAddress, State

# 4. Prozesse mit Netzwerkzugriff
Write-Host "`nüì¶ Prozesse mit offenen Ports..." -ForegroundColor Gray
Get-NetTCPConnection | Group-Object OwningProcess | ForEach-Object {
    try {
        $proc = Get-Process -Id $_.Name -ErrorAction Stop
        Write-Host "üîπ $($proc.ProcessName) (PID: $($_.Name))" -ForegroundColor Yellow
    } catch {
        Write-Host "‚ùì Prozess-ID $($_.Name) nicht auffindbar"
    }
}

# 5. Backup-√úberpr√ºfung
Write-Host "`nüíæ Backup-Check (Registry & HostBackup)..." -ForegroundColor Gray
$regPath = "HKLM:\SOFTWARE\QuantumShield\Backup"
$hostBackup = "C:\ProgramData\QuantumCheck\hosts.bak"
if (Test-Path $regPath) {
    Get-ItemProperty -Path $regPath
} else {
    Write-Host "‚ùå Kein Registry-Backup gefunden." -ForegroundColor DarkYellow
}
if (Test-Path $hostBackup) {
    Write-Host "‚úÖ Host-Backup vorhanden: $hostBackup" -ForegroundColor Green
} else {
    Write-Host "‚ùå Host-Backup fehlt." -ForegroundColor Red
}

# 6. Abschlussbericht
Write-Host "`n‚úÖ ShadowCheck abgeschlossen ‚Äì Ergebnis gespeichert in shadowcheck_log.txt" -ForegroundColor Green

# Speichern des Logs
Start-Transcript -Path "shadowcheck_log.txt" -Force
Stop-Transcript
'''

# Speichern als Datei
file_path = "/mnt/data/ShadowCheck.ps1"
with open(file_path, "w", encoding="utf-8") as f:
    f.write(shadowcheck_script)

file_path
